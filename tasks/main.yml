---
- name: Ensure install dir
  become: yes
  become_user: root
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - "{{ harbor_config_dir }}"
    - "{{ harbor_config_dir }}/source"

- name: Download Harbor
  become: yes
  become_user: root
  get_url:
    url: "https://github.com/goharbor/harbor/releases/download/{{ harbor_version }}-rc3/harbor-offline-installer-{{ harbor_version }}-rc3.tgz"
    dest: "{{ harbor_config_dir }}/harbor.tgz"
    mode: 0755
    owner: root
    group: root

- name: Unzip Harbor
  become: yes
  become_user: root
  unarchive:
    remote_src: yes
    src: "{{ harbor_config_dir }}/harbor.tgz"
    dest: "{{ harbor_config_dir }}/source"
    creates: "{{ harbor_config_dir }}/source/harbor"

- name: Set harbor.yml
  become: yes
  become_user: root
  template:
    src: harbor.yml.j2
    dest: "{{ harbor_config_dir }}/source/harbor/harbor.yml"
    owner: root
    group: root
    mode: 0644

- name: Ensure certificates dir
  become: yes
  become_user: root
  file:
    path: "{{ harbor_data_volume }}/cert"
    state: directory
    mode: 0755
    owner: root
    group: root
  when: connection_protocol == "https"

- name: Copy Certificate
  become: yes
  become_user: root
  copy:
    src: "{{ remote_certificate_dir }}"
    dest: "{{ harbor_data_volume }}/cert/{{ harbor_hostname }}.crt"
    owner: root
    group: root
    mode: 0644
  when: connection_protocol == "https"

- name: Copy Private Key
  become: yes
  become_user: root
  copy:
    src: "{{ remote_private_key_dir }}"
    dest: "{{ harbor_data_volume }}/cert/{{ harbor_hostname }}.key"
    owner: root
    group: root
    mode: 0644
  when: connection_protocol == "https"

- name: Set install script
  become: yes
  become_user: root
  template:
    src: install.sh.j2
    dest: "{{ harbor_config_dir }}/source/harbor/install.sh"
    owner: root
    group: root
    mode: 0755

- name: Install Harbor
  become: yes
  become_user: root
  shell: "{{ harbor_config_dir }}/source/harbor/install.sh {{ harbor_installer_args }}"

- name: Set docker config
  become: yes
  become_user: root
  template:
    src: docker-compose.yml.j2
    dest: "{{ harbor_config_dir }}/source/harbor/docker-compose.yml"
    owner: root
    group: root
    mode: 0644

- name: Start Harbor
  community.docker.docker_compose:
    project_src: "{{ harbor_config_dir }}/source/harbor"
  register: output

- name: Manage users
  include: users_management
  when: harbor_users is defined or
        harbor_projects is defined or
        harbor_members is defined
