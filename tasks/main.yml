---
- name: Ensure install dir
  become: yes
  become_user: root
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - "{{ harbor_config_dir }}"
    - "{{ harbor_config_dir }}/source"

- name: Download Harbor
  become: yes
  become_user: root
  get_url:
    url: "https://github.com/goharbor/harbor/releases/download/{{ harbor_version }}-rc3/harbor-offline-installer-{{ harbor_version }}-rc3.tgz"
    dest: "{{ harbor_config_dir }}/harbor.tgz"
    mode: 0755
    owner: root
    group: root

- name: Unzip Harbor
  become: yes
  become_user: root
  unarchive:
    remote_src: yes
    src: "{{ harbor_config_dir }}/harbor.tgz"
    dest: "{{ harbor_config_dir }}/source"
    creates: "{{ harbor_config_dir }}/source/harbor"

- name: Set harbor.yml
  become: yes
  become_user: root
  template:
    src: harbor.yml.j2
    dest: "{{ harbor_config_dir }}/source/harbor/harbor.yml"
    owner: root
    group: root
    mode: 0644

- name: Ensure certificates dir
  become: yes
  become_user: root
  file:
    path: "{{ harbor_data_volume }}/cert"
    state: directory
    mode: 0755
    owner: root
    group: root
  when: connection_protocol == "https"

- name: Copy Certificate
  become: yes
  become_user: root
  copy:
    src: "{{ remote_certificate_dir }}"
    dest: "{{ harbor_data_volume }}/cert/{{ harbor_hostname }}.crt"
    owner: root
    group: root
    mode: 0644
  when: connection_protocol == "https"

- name: Copy Private Key
  become: yes
  become_user: root
  copy:
    src: "{{ remote_private_key_dir }}"
    dest: "{{ harbor_data_volume }}/cert/{{ harbor_hostname }}.key"
    owner: root
    group: root
    mode: 0644
  when: connection_protocol == "https"

- name: Install and Run Harbor
  become: yes
  become_user: root
  shell: "{{ harbor_config_dir }}/source/harbor/install.sh {{ harbor_installer_args }}"

- name: Creating users
  uri:
    url: "{{ connection_protocol }}://{{ harbor_hostname }}/api/v2.0/users"
    validate_certs: no
    method: POST
    user: "admin"
    password: "{{ harbor_admin_password }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    status_code:
      - 201
      - 409
    body: "{{ lookup('template', 'templates/create_user.j2') }}"
  when: harbor_users is defined
  with_items: "{{ harbor_users }}"

- name: Creating Projects
  uri:
    url: "{{ connection_protocol }}://{{ harbor_hostname }}/api/v2.0/projects"
    validate_certs: no
    method: POST
    user: "admin"
    password: "{{ harbor_admin_password }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    status_code:
      - 201
      - 409
    body: "{{ lookup('template', 'templates/create_project.j2') }}"
  when: harbor_projects is defined
  with_items: "{{ harbor_projects }}"

- name: Creating Members
  uri:
    url: "{{ connection_protocol }}://{{ harbor_hostname }}/api/v2.0/projects/{{ item.project }}/members"
    validate_certs: no
    method: POST
    user: "admin"
    password: "{{ harbor_admin_password }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    status_code:
      - 201
      - 409
    body: "{{ lookup('template', 'templates/create_member.j2') }}"
  when: harbor_members is defined
  with_items: "{{ harbor_members }}"
